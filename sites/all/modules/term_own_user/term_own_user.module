<?php
// $Id: term_own_user.module,v 1.7 2009/11/19 02:11:01 tqnghiep Exp $

/**
 * @file
 * Count to, or from, a specified date and display the output in a block
 */


/**
 * Implement hook_help().
 *
 * @param string $section
 * @return string
 */
function term_own_user_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/help#fd_report':
      $output = t("fd_report");
      break;
  }
  return $output;
}


/**
 * Implements hook_permission().
 */
function term_own_user_permission() {
    $permissions = array(
    );
    return $permissions;
}

function term_own_user_menu() {
    $items = array();
    return $items;
}


/**
 * Implementation of hook_form_alter().
 */
function term_own_user_form_alter(&$form, $form_state, $form_id) {
    // Check for a particular content type's node form.
    switch($form_id){
        case 'taxonomy_form_term':
            $form['#after_build'][] = 'taxonomy_form_term_after_build';
            break;
        case 'user_register_form':
            $form['#after_build'][] = 'user_register_form_after_build';
            break;
        case 'user_profile_form':
            $form['#after_build'][] = 'user_profile_form_after_build';
            break;
        default:
            break;
    }
}

/**
 * Modify CCK form elements on the example node form.
 */
function taxonomy_form_term_after_build($form, &$form_state) {
    // TODO: Stuff!

    // Remove other users' terms so only the current user's terms are
    // displayed. This should be deprecated.
    global $user;
    if(!user_access('administer taxonomy', $user)){
        $account = user_load($user->uid);
        $term_per_user = array();
        foreach($account as $key => $value){
            if(preg_match('/field_/', $key) && count($value)>0){
                foreach($value['und'] as $k => $v){
                    $term_per_user[] = intval($v['tid']);
                }
            }
			if(preg_match('/field_/', $key) && count($value)==0){
				drupal_set_message(t('You must select your categories, please click <a href="@link">here</a> to do that before create sub categories.', array('@link'=>url('user/'.$user->uid.'/edit'))), 'error');
			}
        }
        $parent = $form['relations']['parent']['#options'];        
        foreach ($parent as $tid => $value) {
            if (is_numeric($tid)) {
                if ((private_taxonomy_is_term_private($tid))) {
                    if(!in_array($tid, $term_per_user) && private_taxonomy_term_get_user($tid) != $user->uid){
                        unset($form['relations']['parent']['#options'][$tid]);
                    }
                }else{
                    unset($form['relations']['parent']['#options'][$tid]);
                }
            }
        }
		
		$form['relations']['#collapsible'] = false;
		$form['relations']['#collapsed'] = false;	
		
		//Set parent field is required
		$form['relations']['parent']['#required'] = true;
		//Set default_value for parent field		
		$tids = array_keys($form['relations']['parent']['#options']);
		if(count($tids)>0){
			$form['relations']['parent']['#default_value'] = $tids[0];
			$form['relations']['parent']['#value'] = $tids[0];
		}		
    }else{
		$parent = $form['relations']['parent']['#options'];
        foreach ($parent as $tid => $value) {
			$user_id_of_term = private_taxonomy_term_get_user($tid);
			if(is_numeric($user_id_of_term)){
				$account = user_load($user_id_of_term);
				if(!user_access('administer taxonomy', $account)){
					unset($form['relations']['parent']['#options'][$tid]);
				}
			}
        }
	}	

    return $form;
}

/**
 * Modify CCK form elements on the example node form.
 */
function user_register_form_after_build($form, &$form_state) {
	
	foreach($form as $key => $value){
		if(preg_match('/field_/', $key)){
			$parents = taxonomy_parents_top_level_items(2);			
			$options = $form[$key]['und']['#options'];
			foreach($options as $tid =>$option){
				if(!in_array($tid, array_keys($parents))){
					unset($form[$key]['und']['#options'][$tid]);
					unset($form[$key]['und'][$tid]);
				}
			}
		}
	}
    return $form;
}


/**
 * Modify CCK form elements on the example node form.
 */
function user_profile_form_after_build($form, &$form_state) {
	
	foreach($form as $key => $value){
		if(preg_match('/field_/', $key)){
			$form[$key]['#weight']=-20;
			$parents = taxonomy_parents_top_level_items(2);			
			$options = $form[$key]['und']['#options'];
			foreach($options as $tid =>$option){
				if(!in_array($tid, array_keys($parents))){
					unset($form[$key]['und']['#options'][$tid]);
					unset($form[$key]['und'][$tid]);
				}
			}
		}
	}
    return $form;
}

function taxonomy_parents_top_level_items($vocabulary_id){
	$pterms = taxonomy_get_tree($vocabulary_id, 0, 1);
	$return = array();
	foreach($pterms as $tid => $tem){
		$return[$tem->tid] = $tem->name;
	}
	return $return;
}